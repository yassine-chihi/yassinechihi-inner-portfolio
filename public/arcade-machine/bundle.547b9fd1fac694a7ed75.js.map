{"version":3,"file":"bundle.547b9fd1fac694a7ed75.js","mappings":"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","sources":["webpack:///./src/snake.js","webpack:///./src/tetris.js","webpack:///./src/break-out.js","webpack:///./src/script.js"],"sourcesContent":["// Class adapted from https://gist.github.com/straker/ff00b4b49669ad3dec890306d348adc4\nclass SnakeGame {\n  constructor() {\n    this.canvas = document.getElementById(\"game\");\n    this.currentScoreElement = document.getElementById(\"currentScore\");\n    this.maxScoreElement = document.getElementById(\"maxScore\");\n    this.currentScoreElement.style.display = \"block\";\n    this.maxScoreElement.style.display = \"block\";\n    this.currentScore = 0;\n    this.updateScore();\n    this.canvas.style.display = \"block\";\n    this.context = this.canvas.getContext(\"2d\");\n    this.keyDownAllowed = true;\n    this.keysPressedQueue = [];\n    this.grid = 32;\n    this.numCellsW = this.canvas.width / this.grid;\n    this.numCellsH = this.canvas.height / this.grid;\n    this.snake = {\n      x: 160,\n      y: 160,\n      dx: this.grid,\n      dy: 0,\n      cells: [],\n      maxCells: 4,\n    };\n    this.apple = {\n      x: 320,\n      y: 320,\n    };\n    this.loopInterval = 50;\n    this.loopId = null;\n  }\n\n  // get random whole numbers in a specific range\n  // @see https://stackoverflow.com/a/1527820/2124254\n  getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  loop = () => {\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n    this.snake.x += this.snake.dx;\n    this.snake.y += this.snake.dy;\n\n    if (this.snake.x < 0) {\n      this.snake.x = this.canvas.width - this.grid;\n    } else if (this.snake.x >= this.canvas.width) {\n      this.snake.x = 0;\n    }\n\n    if (this.snake.y < 0) {\n      this.snake.y = this.canvas.height - this.grid;\n    } else if (this.snake.y >= this.canvas.height) {\n      this.snake.y = 0;\n    }\n\n    this.snake.cells.unshift({ x: this.snake.x, y: this.snake.y });\n\n    if (this.snake.cells.length > this.snake.maxCells) {\n      this.snake.cells.pop();\n    }\n\n    this.context.fillStyle = \"#ff0000\";\n    this.context.beginPath();\n    this.context.arc(\n      this.apple.x + this.grid / 2,\n      this.apple.y + this.grid / 2,\n      12,\n      0,\n      2 * Math.PI\n    );\n    this.context.fill();\n\n    this.context.fillStyle = \"#35de00\";\n    this.snake.cells.forEach((cell, index) => {\n      this.context.fillRect(cell.x, cell.y, this.grid - 1, this.grid - 1);\n\n      if (cell.x === this.apple.x && cell.y === this.apple.y) {\n        window.parent.postMessage(\"hit\", \"*\");\n        this.snake.maxCells++;\n        this.apple.x = this.getRandomInt(0, this.numCellsW) * this.grid;\n        this.apple.y = this.getRandomInt(0, this.numCellsH) * this.grid;\n        this.currentScore += 10;\n        this.updateScore();\n      }\n\n      for (let i = index + 1; i < this.snake.cells.length; i++) {\n        if (\n          cell.x === this.snake.cells[i].x &&\n          cell.y === this.snake.cells[i].y\n        ) {\n          window.parent.postMessage(\"die\", \"*\");\n          this.currentScore = 0;\n          this.updateScore();\n          this.snake.x = 160;\n          this.snake.y = 160;\n          this.snake.cells = [];\n          this.snake.maxCells = 4;\n          this.snake.dx = this.grid;\n          this.snake.dy = 0;\n\n          this.apple.x = this.getRandomInt(0, this.numCellsW) * this.grid;\n          this.apple.y = this.getRandomInt(0, this.numCellsH) * this.grid;\n        }\n      }\n    });\n  };\n\n  listenKeyboard() {\n    window.addEventListener(\"message\", this.handleParentMessage);\n    window.addEventListener(\"keydown\", this.keyListener);\n  }\n\n  handleParentMessage = (event) => {\n    if (event.data.type === \"keyDownParent\") {\n      this.keyListener(event.data);\n    }\n  };\n\n  keyListener = (e) => {\n    if (!this.keyDownAllowed) {\n      this.keysPressedQueue.push(e);\n      return;\n    }\n    this.processKeyEvent(e);\n    this.keyDownAllowed = false;\n    setTimeout(() => {\n      this.keyDownAllowed = true;\n      while (this.keysPressedQueue.length > 0) {\n        const keyEvent = this.keysPressedQueue.shift();\n        this.processKeyEvent(keyEvent);\n      }\n    }, this.loopInterval);\n  };\n\n  updateScore() {\n    let maxScore = localStorage.getItem(\"maxSnakeScore\") || 0;\n    if (this.currentScore > maxScore) {\n      maxScore = this.currentScore;\n      localStorage.setItem(\"maxSnakeScore\", this.currentScore);\n    }\n    this.currentScoreElement.textContent =\n      \"CURRENT SCORE: \" + this.currentScore;\n\n    this.maxScoreElement.textContent = \"MAX SCORE: \" + maxScore;\n  }\n  processKeyEvent(e) {\n    if (e.key === \"ArrowLeft\" && this.snake.dx === 0) {\n      this.snake.dx = -this.grid;\n      this.snake.dy = 0;\n    }\n    // up arrow key\n    else if (e.key === \"ArrowUp\" && this.snake.dy === 0) {\n      this.snake.dy = -this.grid;\n      this.snake.dx = 0;\n    }\n    // right arrow key\n    else if (e.key === \"ArrowRight\" && this.snake.dx === 0) {\n      this.snake.dx = this.grid;\n      this.snake.dy = 0;\n    }\n    // down arrow key\n    else if (e.key === \"ArrowDown\" && this.snake.dy === 0) {\n      this.snake.dy = this.grid;\n      this.snake.dx = 0;\n    }\n  }\n\n  start() {\n    this.listenKeyboard();\n    this.loopId = setInterval(this.loop, this.loopInterval);\n  }\n\n  destroy() {\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    clearInterval(this.loopId);\n    window.removeEventListener(\"message\", this.handleParentMessage);\n    this.canvas.style.display = \"none\";\n  }\n}\n\nexport default SnakeGame;\n","// Class adapted from https://gist.github.com/straker/3c98304f8a6a9174efd8292800891ea1\nclass Tetris {\n  constructor() {\n    this.canvas = document.getElementById(\"tetris\");\n    this.currentScoreElement = document.getElementById(\"currentScore\");\n    this.maxScoreElement = document.getElementById(\"maxScore\");\n    this.currentScoreElement.style.display = \"block\";\n    this.maxScoreElement.style.display = \"block\";\n    this.canvas.style.display = \"block\";\n    this.context = this.canvas.getContext(\"2d\");\n    this.loopInterval = 5;\n    this.loopId = null;\n    this.grid = 32;\n    this.currentScore = 0;\n    this.updateScore();\n    this.tetrominoSequence = [];\n    this.playfield = [];\n    this.clearPlayfield();\n    this.tetrominos = {\n      I: [\n        [0, 0, 0, 0],\n        [1, 1, 1, 1],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n      ],\n      J: [\n        [1, 0, 0],\n        [1, 1, 1],\n        [0, 0, 0],\n      ],\n      L: [\n        [0, 0, 1],\n        [1, 1, 1],\n        [0, 0, 0],\n      ],\n      O: [\n        [1, 1],\n        [1, 1],\n      ],\n      S: [\n        [0, 1, 1],\n        [1, 1, 0],\n        [0, 0, 0],\n      ],\n      Z: [\n        [1, 1, 0],\n        [0, 1, 1],\n        [0, 0, 0],\n      ],\n      T: [\n        [0, 1, 0],\n        [1, 1, 1],\n        [0, 0, 0],\n      ],\n    };\n    this.colors = {\n      I: \"#00ffff\",\n      O: \"#ffff00\",\n      T: \"#800080\",\n      S: \"#00ff00\",\n      Z: \"#ff0000\",\n      J: \"#0000ff\",\n      L: \"#ff7f00\",\n    };\n    this.count = 0;\n    this.gameOver = false;\n    this.clearPlayfield();\n    this.tetromino = this.getNextTetromino();\n  }\n\n  updateScore() {\n    let maxScore = localStorage.getItem(\"maxTetrisScore\") || 0;\n    if (this.currentScore > maxScore) {\n      maxScore = this.currentScore;\n      localStorage.setItem(\"maxTetrisScore\", this.currentScore);\n    }\n    this.currentScoreElement.textContent =\n      \"CURRENT SCORE: \" + this.currentScore;\n\n    this.maxScoreElement.textContent = \"MAX SCORE: \" + maxScore;\n  }\n\n  start() {\n    window.addEventListener(\"message\", this.handleParentMessage);\n    window.addEventListener(\"keydown\", this.keyDownHandler);\n    this.loopId = setInterval(this.loop, this.loopInterval);\n  }\n\n  loop = () => {\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    for (let row = 0; row < 20; row++) {\n      for (let col = 0; col < 10; col++) {\n        if (this.playfield[row][col]) {\n          const name = this.playfield[row][col];\n          this.context.fillStyle = this.colors[name];\n\n          this.context.fillRect(\n            col * this.grid,\n            row * this.grid,\n            this.grid - 1,\n            this.grid - 1\n          );\n        }\n      }\n    }\n\n    if (this.tetromino) {\n      if (++this.count > 35) {\n        this.tetromino.row++;\n        this.count = 0;\n\n        if (\n          !this.isValidMove(\n            this.tetromino.matrix,\n            this.tetromino.row,\n            this.tetromino.col\n          )\n        ) {\n          this.tetromino.row--;\n          this.placeTetromino();\n        }\n      }\n\n      this.context.fillStyle = this.colors[this.tetromino.name];\n\n      for (let row = 0; row < this.tetromino.matrix.length; row++) {\n        for (let col = 0; col < this.tetromino.matrix[row].length; col++) {\n          if (this.tetromino.matrix[row][col]) {\n            this.context.fillRect(\n              (this.tetromino.col + col) * this.grid,\n              (this.tetromino.row + row) * this.grid,\n              this.grid - 1,\n              this.grid - 1\n            );\n          }\n        }\n      }\n    }\n  };\n\n  generateSequence() {\n    const sequence = [\"I\", \"J\", \"L\", \"O\", \"S\", \"T\", \"Z\"];\n\n    while (sequence.length) {\n      const rand = this.getRandomInt(0, sequence.length - 1);\n      const name = sequence.splice(rand, 1)[0];\n      this.tetrominoSequence.push(name);\n    }\n  }\n\n  getNextTetromino() {\n    if (this.tetrominoSequence.length === 0) {\n      this.generateSequence();\n    }\n\n    const name = this.tetrominoSequence.pop();\n    const matrix = this.tetrominos[name];\n    const col = this.playfield[0].length / 2 - Math.ceil(matrix[0].length / 2);\n    const row = name === \"I\" ? -1 : -2;\n\n    return {\n      name: name,\n      matrix: matrix,\n      row: row,\n      col: col,\n    };\n  }\n\n  // rotate an NxN matrix 90deg\n  // @see https://codereview.stackexchange.com/a/186834\n  rotate(matrix) {\n    const N = matrix.length - 1;\n    const result = matrix.map((row, i) =>\n      row.map((val, j) => matrix[N - j][i])\n    );\n\n    return result;\n  }\n\n  isValidMove(matrix, cellRow, cellCol) {\n    for (let row = 0; row < matrix.length; row++) {\n      for (let col = 0; col < matrix[row].length; col++) {\n        if (\n          matrix[row][col] &&\n          (cellCol + col < 0 ||\n            cellCol + col >= this.playfield[0].length ||\n            cellRow + row >= this.playfield.length ||\n            this.playfield[cellRow + row][cellCol + col])\n        ) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  placeTetromino() {\n    for (let row = 0; row < this.tetromino.matrix.length; row++) {\n      for (let col = 0; col < this.tetromino.matrix[row].length; col++) {\n        if (this.tetromino.matrix[row][col]) {\n          if (this.tetromino.row + row < 0) {\n            window.parent.postMessage(\"die\", \"*\");\n            this.showGameOver();\n            return;\n          }\n\n          this.playfield[this.tetromino.row + row][this.tetromino.col + col] =\n            this.tetromino.name;\n        }\n      }\n    }\n    let numClears = 0;\n\n    for (let row = this.playfield.length - 1; row >= 0; ) {\n      if (this.playfield[row].every((cell) => !!cell)) {\n        ++numClears;\n        for (let r = row; r >= 0; r--) {\n          for (let c = 0; c < this.playfield[r].length; c++) {\n            this.playfield[r][c] = this.playfield[r - 1][c];\n          }\n        }\n      } else {\n        row--;\n      }\n    }\n    if (numClears > 0) {\n      window.parent.postMessage(\"tetris\", \"*\");\n    } else {\n      window.parent.postMessage(\"select1\", \"*\");\n    }\n    if (numClears == 0) {\n      this.currentScore += 10;\n    } else if (numClears == 1) {\n      this.currentScore += 100;\n    } else if (numClears == 2) {\n      this.currentScore += 300;\n    } else if (numClears == 3) {\n      this.currentScore += 500;\n    } else if (numClears == 4) {\n      this.currentScore += 800;\n    }\n    this.updateScore();\n    this.tetromino = this.getNextTetromino();\n  }\n\n  showGameOver() {\n    this.gameOver = true;\n    this.currentScore = 0;\n    this.updateScore();\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.clearPlayfield();\n  }\n\n  clearPlayfield() {\n    for (let row = -2; row < 20; row++) {\n      this.playfield[row] = [];\n\n      for (let col = 0; col < 10; col++) {\n        this.playfield[row][col] = 0;\n      }\n    }\n  }\n\n  destroy() {\n    this.showGameOver();\n    clearInterval(this.loopId);\n    window.removeEventListener(\"message\", this.handleParentMessage);\n    window.removeEventListener(\"keydown\", this.keyDownHandler);\n    this.canvas.style.display = \"none\";\n  }\n\n  getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  handleParentMessage = (event) => {\n    if (event.data.type === \"keyDownParent\") {\n      this.keyDownHandler(event.data);\n    }\n  };\n\n  keyDownHandler = (e) => {\n    if (e.key === \"ArrowLeft\" || e.key === \"ArrowRight\") {\n      const col =\n        e.key === \"ArrowLeft\" ? this.tetromino.col - 1 : this.tetromino.col + 1;\n\n      if (this.isValidMove(this.tetromino.matrix, this.tetromino.row, col)) {\n        this.tetromino.col = col;\n      }\n    }\n\n    // up arrow key (rotate)\n    if (e.key === \"ArrowUp\") {\n      const matrix = this.rotate(this.tetromino.matrix);\n      if (this.isValidMove(matrix, this.tetromino.row, this.tetromino.col)) {\n        this.tetromino.matrix = matrix;\n      }\n    }\n\n    // down arrow key (drop)\n    if (e.key === \"ArrowDown\") {\n      const row = this.tetromino.row + 1;\n      if (!this.isValidMove(this.tetromino.matrix, row, this.tetromino.col)) {\n        this.tetromino.row = row - 1;\n        this.placeTetromino();\n        return;\n      }\n      this.tetromino.row = row;\n    }\n  };\n}\n\nexport default Tetris;\n","// Class adapted from https://gist.github.com/straker/98a2aed6a7686d26c04810f08bfaf66b\nclass BreakOut {\n  constructor() {\n    this.canvas = document.getElementById(\"break-out\");\n    this.context = this.canvas.getContext(\"2d\");\n    this.currentScoreElement = document.getElementById(\"currentScore\");\n    this.maxScoreElement = document.getElementById(\"maxScore\");\n    this.currentScoreElement.style.display = \"block\";\n    this.maxScoreElement.style.display = \"block\";\n    this.canvas.style.display = \"block\";\n    this.currentScore = 0;\n    this.loopInterval = 1;\n    this.loopId = null;\n    this.brickGap = 2;\n    this.brickWidth = 48;\n    this.brickHeight = 24;\n    this.limitScore = 448;\n    this.bricks = [];\n    this.paddle = {\n      x: this.canvas.width / 2 - this.brickWidth / 2,\n      y: 600,\n      width: this.brickWidth,\n      height: this.brickHeight,\n      dx: 0,\n    };\n    this.ball = {\n      x: 50,\n      y: 300,\n      width: 16,\n      height: 16,\n      speed: 2,\n      dx: 0,\n      dy: 0,\n    };\n\n    this.colorMap = {\n      R: \"#a40600\",\n      O: \"#c88000\",\n      G: \"#007f23\",\n      Y: \"#c7c519\",\n    };\n    this.isKeyLeftPressing = false;\n    this.isKeyRightPressing = false;\n    this.level = [\n      [],\n      [],\n      [],\n      [\"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\"],\n      [\"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\"],\n      [\"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\"],\n      [\"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\"],\n      [\"G\", \"G\", \"G\", \"G\", \"G\", \"G\", \"G\", \"G\", \"G\", \"G\", \"G\", \"G\", \"G\", \"G\"],\n      [\"G\", \"G\", \"G\", \"G\", \"G\", \"G\", \"G\", \"G\", \"G\", \"G\", \"G\", \"G\", \"G\", \"G\"],\n      [\"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\"],\n      [\"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\"],\n    ];\n    this.updateScore();\n  }\n\n  createLevel(levelData) {\n    for (let row = 0; row < levelData.length; row++) {\n      for (let col = 0; col < levelData[row].length; col++) {\n        const colorCode = levelData[row][col];\n        this.bricks.push({\n          x: (this.brickWidth + this.brickGap) * col,\n          y: (this.brickHeight + this.brickGap) * row,\n          color: this.colorMap[colorCode],\n          colorCode: colorCode,\n          width: this.brickWidth,\n          height: this.brickHeight,\n        });\n      }\n    }\n  }\n  collides(obj1, obj2) {\n    return (\n      obj1.x < obj2.x + obj2.width &&\n      obj1.x + obj1.width > obj2.x &&\n      obj1.y < obj2.y + obj2.height &&\n      obj1.y + obj1.height > obj2.y\n    );\n  }\n\n  loop = () => {\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n    this.paddle.x += this.paddle.dx;\n\n    if (this.paddle.x < 0) {\n      this.paddle.x = 0;\n    } else if (this.paddle.x + this.brickWidth > this.canvas.width) {\n      this.paddle.x = this.canvas.width - this.brickWidth;\n    }\n\n    this.ball.x += this.ball.dx;\n    this.ball.y += this.ball.dy;\n\n    if (this.ball.x < 0) {\n      window.parent.postMessage(\"hit\", \"*\");\n      this.ball.x = 0;\n      this.ball.dx *= -1;\n    } else if (this.ball.x + this.ball.width > this.canvas.width) {\n      window.parent.postMessage(\"hit\", \"*\");\n      this.ball.x = this.canvas.width - this.ball.width;\n      this.ball.dx *= -1;\n    }\n\n    if (this.ball.y < 0) {\n      this.ball.y = 0;\n      this.ball.dy *= -1;\n    }\n\n    if (this.ball.y > this.canvas.height) {\n      this.ball.x = 50;\n      this.ball.y = 300;\n      this.ball.dx = 0;\n      this.ball.dy = 0;\n      window.parent.postMessage(\"die\", \"*\");\n      this.resetLevel();\n    }\n    this.checkBallPaddleCollision();\n\n    for (let i = 0; i < this.bricks.length; i++) {\n      const brick = this.bricks[i];\n      if (this.collides(this.ball, brick)) {\n        window.parent.postMessage(\"hit\", \"*\");\n        switch (brick.colorCode) {\n          case \"Y\":\n            this.currentScore += 1;\n            break;\n          case \"G\":\n            this.currentScore += 3;\n            break;\n          case \"O\":\n            this.currentScore += 5;\n            break;\n          case \"R\":\n            this.currentScore += 7;\n            break;\n        }\n        this.updateScore();\n        this.bricks.splice(i, 1);\n        if (\n          this.ball.y + this.ball.height - this.ball.speed <= brick.y ||\n          this.ball.y >= brick.y + brick.height - this.ball.speed\n        ) {\n          this.ball.dy *= -1;\n        } else {\n          this.ball.dx *= -1;\n        }\n\n        break;\n      }\n    }\n\n    if (this.ball.dx || this.ball.dy) {\n      this.context.fillStyle = \"#a9a8a9\";\n\n      this.context.fillRect(\n        this.ball.x,\n        this.ball.y,\n        this.ball.width,\n        this.ball.height\n      );\n    }\n\n    this.bricks.forEach((brick) => {\n      this.context.fillStyle = brick.color;\n      this.context.fillRect(brick.x, brick.y, brick.width, brick.height);\n    });\n\n    this.context.fillStyle = \"#005b91\";\n    this.context.fillRect(\n      this.paddle.x,\n      this.paddle.y,\n      this.paddle.width,\n      this.paddle.height\n    );\n  };\n\n  keyDownHandler = (e) => {\n    if (e.key === \"ArrowLeft\") {\n      this.isKeyLeftPressing = true;\n      this.paddle.dx = -3;\n    } else if (e.key === \"ArrowRight\") {\n      this.isKeyRightPressing = true;\n      this.paddle.dx = 3;\n    }\n  };\n\n  keyUpHandler = (e) => {\n    if (e.key === \"ArrowLeft\") {\n      this.isKeyLeftPressing = false;\n      if (!this.isKeyRightPressing) {\n        this.paddle.dx = 0;\n      }\n    } else if (e.key === \"ArrowRight\") {\n      this.isKeyRightPressing = false;\n      if (!this.isKeyLeftPressing) {\n        this.paddle.dx = 0;\n      }\n    }\n  };\n\n  checkBallPaddleCollision() {\n    // Outside Collision\n    const outsideLeft = {\n      x: this.paddle.x + this.paddle.width / 2 - 24,\n      y: this.paddle.y,\n      width: 8,\n      height: 32,\n    };\n    const outsideRight = {\n      x: this.paddle.x + this.paddle.width / 2 + 24,\n      y: this.paddle.y,\n      width: 8,\n      height: 32,\n    };\n    // Inner side Collision\n    const innerLeft = {\n      x: this.paddle.x + this.paddle.width / 2 - 12,\n      y: this.paddle.y,\n      width: 8,\n      height: 32,\n    };\n    const innerRight = {\n      x: this.paddle.x + this.paddle.width / 2 + 12,\n      y: this.paddle.y,\n      width: 8,\n      height: 32,\n    };\n    // Inner Collision\n    const innerCenter = {\n      x: this.paddle.x + this.paddle.width / 2,\n      y: this.paddle.y,\n      width: 16,\n      height: 32,\n    };\n\n    if (this.collides(this.ball, innerCenter)) {\n      window.parent.postMessage(\"hit\", \"*\");\n      this.ball.dx = this.ball.dx < 0 ? -1 : 1;\n      this.ball.dy = this.ball.dy < 0 ? 2 : -2;\n      this.ball.y = this.paddle.y - this.ball.height;\n    } else if (\n      this.collides(this.ball, innerRight) ||\n      this.collides(this.ball, innerLeft)\n    ) {\n      window.parent.postMessage(\"hit\", \"*\");\n      this.ball.dx = this.ball.dx < 0 ? -2 : 2;\n      this.ball.dy = this.ball.dy < 0 ? 2 : -2;\n      this.ball.y = this.paddle.y - this.ball.height;\n    } else if (\n      this.collides(this.ball, outsideRight) ||\n      this.collides(this.ball, outsideLeft)\n    ) {\n      window.parent.postMessage(\"hit\", \"*\");\n      this.ball.dx = this.ball.dx < 0 ? -2 : 2;\n      this.ball.dy = this.ball.dy < 0 ? 1 : -1;\n      this.ball.y = this.paddle.y - this.ball.height;\n    }\n  }\n\n  resetLevel() {\n    this.currentScore = 0;\n    this.updateScore();\n    this.bricks = [];\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.createLevel(this.level);\n    this.paddle.x = this.canvas.width / 2 - this.brickWidth / 2;\n    this.paddle.y = 600;\n    this.ball.dx = 2;\n    this.ball.dy = 2;\n  }\n\n  updateScore() {\n    let maxScore = localStorage.getItem(\"maxBreakOutScore\") || 0;\n    if (this.currentScore > maxScore) {\n      maxScore = this.currentScore;\n      localStorage.setItem(\"maxBreakOutScore\", this.currentScore);\n    }\n    this.currentScoreElement.textContent =\n      \"CURRENT SCORE: \" + this.currentScore;\n\n    this.maxScoreElement.textContent = \"MAX SCORE: \" + maxScore;\n    if (this.currentScore >= this.limitScore) {\n      this.resetLevel();\n    }\n  }\n\n  handleParentMessage = (event) => {\n    if (event.data.type === \"keyDownParent\") {\n      this.keyDownHandler(event.data);\n    } else if (event.data.type === \"keyUpParent\") {\n      this.keyUpHandler(event.data);\n    }\n  };\n\n  listenKeyboard() {\n    window.addEventListener(\"message\", this.handleParentMessage);\n    window.addEventListener(\"keydown\", this.keyDownHandler);\n    window.addEventListener(\"keyup\", this.keyUpHandler);\n  }\n\n  destroy() {\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    clearInterval(this.loopId);\n    window.removeEventListener(\"message\", this.handleParentMessage);\n    window.removeEventListener(\"keydown\", this.keyDownHandler);\n    window.removeEventListener(\"keyup\", this.keyUpHandler);\n    this.canvas.style.display = \"none\";\n  }\n\n  start() {\n    this.createLevel(this.level);\n    this.ball.dx = 2;\n    this.ball.dy = 2;\n    this.listenKeyboard();\n    this.loopId = setInterval(this.loop, this.loopInterval);\n  }\n}\n\nexport default BreakOut;\n","import \"./style.css\";\nimport SnakeGame from \"./snake.js\";\nimport Tetris from \"./tetris.js\";\nimport BreakOut from \"./break-out.js\";\n// Obtener todas las opciones del juego\nconst gameOptions = document.querySelectorAll(\".game-option\");\nconst menuElement = document.getElementById(\"menu\");\nconst titleElement = document.getElementById(\"title\");\nconst currentScoreElement = document.getElementById(\"currentScore\");\nconst maxScoreElement = document.getElementById(\"maxScore\");\nlet selectedIndex = 0;\nlet currentGame = null;\nupdateSelected();\n\nfunction updateSelected() {\n  gameOptions.forEach(function (option) {\n    option.textContent = option.textContent.replace(/[<>]/g, \"\");\n  });\n  const selectedOption = gameOptions[selectedIndex];\n  selectedOption.textContent = \"> \" + selectedOption.textContent + \" <\";\n}\n\nfunction handleKeyPress(event) {\n  if (currentGame == null) {\n    switch (event.key) {\n      case \"ArrowUp\":\n        window.parent.postMessage(\"select1\", \"*\");\n        selectedIndex = selectedIndex === 0 ? 2 : selectedIndex - 1;\n        break;\n      case \"ArrowDown\":\n        window.parent.postMessage(\"select1\", \"*\");\n        selectedIndex = selectedIndex === 2 ? 0 : selectedIndex + 1;\n        break;\n      case \" \":\n        window.parent.postMessage(\"select2\", \"*\");\n        startGameSelected();\n        break;\n      case \"Enter\":\n        window.parent.postMessage(\"select2\", \"*\");\n        startGameSelected();\n        break;\n    }\n    updateSelected();\n  } else if (event.key == \"Escape\" && currentGame != null) {\n    window.parent.postMessage(\"select2\", \"*\");\n    currentScoreElement.style.display = \"none\";\n    maxScoreElement.style.display = \"none\";\n    currentGame.destroy();\n    currentGame = null;\n    titleElement.style.display = \"block\";\n    menuElement.style.display = \"block\";\n    window.addEventListener(\"message\", handleParentMessage);\n    window.addEventListener(\"keydown\", handleKeyPress);\n  }\n}\n\nfunction startGameSelected() {\n  switch (selectedIndex) {\n    case 0:\n      menuElement.style.display = \"none\";\n      titleElement.style.display = \"none\";\n\n      currentGame = new SnakeGame();\n      currentGame.start();\n      break;\n    case 1:\n      menuElement.style.display = \"none\";\n      titleElement.style.display = \"none\";\n      currentGame = new Tetris();\n      currentGame.start();\n\n      break;\n    case 2:\n      menuElement.style.display = \"none\";\n      titleElement.style.display = \"none\";\n      currentGame = new BreakOut();\n      currentGame.start();\n\n      break;\n  }\n}\n\nfunction handleParentMessage(event) {\n  if (event.data.type === \"keyDownParent\") {\n    handleKeyPress(event.data);\n  }\n}\n\nwindow.addEventListener(\"message\", handleParentMessage);\nwindow.addEventListener(\"keydown\", handleKeyPress);\n"],"names":["constructor","this","canvas","document","getElementById","currentScoreElement","maxScoreElement","style","display","currentScore","updateScore","context","getContext","keyDownAllowed","keysPressedQueue","grid","numCellsW","width","numCellsH","height","snake","x","y","dx","dy","cells","maxCells","apple","loopInterval","loopId","getRandomInt","min","max","Math","floor","random","loop","clearRect","unshift","length","pop","fillStyle","beginPath","arc","PI","fill","forEach","cell","index","fillRect","window","parent","postMessage","i","listenKeyboard","addEventListener","handleParentMessage","keyListener","event","data","type","e","processKeyEvent","setTimeout","keyEvent","shift","push","maxScore","localStorage","getItem","setItem","textContent","key","start","setInterval","destroy","clearInterval","removeEventListener","tetrominoSequence","playfield","clearPlayfield","tetrominos","I","J","L","O","S","Z","T","colors","count","gameOver","tetromino","getNextTetromino","keyDownHandler","row","col","name","isValidMove","matrix","placeTetromino","generateSequence","sequence","rand","splice","ceil","rotate","N","map","val","j","cellRow","cellCol","showGameOver","numClears","every","r","c","brickGap","brickWidth","brickHeight","limitScore","bricks","paddle","ball","speed","colorMap","R","G","Y","isKeyLeftPressing","isKeyRightPressing","level","createLevel","levelData","colorCode","color","collides","obj1","obj2","resetLevel","checkBallPaddleCollision","brick","keyUpHandler","outsideLeft","outsideRight","innerLeft","innerRight","innerCenter","gameOptions","querySelectorAll","menuElement","titleElement","selectedIndex","currentGame","updateSelected","option","replace","selectedOption","handleKeyPress","SnakeGame","Tetris","BreakOut","startGameSelected"],"sourceRoot":""}